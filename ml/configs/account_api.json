{
    "openapi": "3.1.0",
    "info": {
        "title": "Личный кабинет",
        "description": "Мастер-система личной информации пользователя, закладок и тегов",
        "version": "0.1.0"
    },
    "paths": {
        "/files/icon-upload": {
            "post": {
                "tags": [
                    "files"
                ],
                "summary": "Icon Upload",
                "description": "Загрузка аватарки пользователя",
                "operationId": "icon_upload_files_icon_upload_post",
                "parameters": [
                    {
                        "name": "x-user-id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "X-User-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_icon_upload_files_icon_upload_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Icon Upload Files Icon Upload Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/files/icon-get-link": {
            "get": {
                "tags": [
                    "files"
                ],
                "summary": "Icon Get Link",
                "description": "Получить ссылку на аватарку пользователя",
                "operationId": "icon_get_link_files_icon_get_link_get",
                "parameters": [
                    {
                        "name": "x-user-id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "X-User-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Icon Get Link Files Icon Get Link Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "register"
                ],
                "summary": "Register User",
                "description": "Регистрация пользователя",
                "operationId": "register_user_register_post",
                "parameters": [
                    {
                        "name": "x-user-id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "X-User-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags/update": {
            "post": {
                "tags": [
                    "tags"
                ],
                "summary": "Update User Tags",
                "description": "Сохраняет теги для пользователя. Игнорирует дубликаты.\n\n:param user_id: Идентификатор пользователя, для которого добавляются теги.\n:param tags_input: Список тегов, переданных пользователем в формате TagsInput.\n:param session: Подключение к базе данных, передаётся через Depends.\n:return: Словарь с сообщением о статусе операции.\n:raises HTTPException: Если список тегов пустой или произошла ошибка базы данных.",
                "operationId": "update_user_tags_tags_update_post",
                "parameters": [
                    {
                        "name": "x-user-id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "X-User-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagsInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Update User Tags Tags Update Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags/get": {
            "get": {
                "tags": [
                    "tags"
                ],
                "summary": "Get User Tags",
                "description": "Получает список тегов пользователя по ID.\n\n:param user_id: Идентификатор пользователя, для которого запрашиваются теги.\n:param session: Подключение к базе данных, передаётся через Depends.\n:return: Объект TagsOutput, содержащий список тегов пользователя.\n:raises HTTPException: Если для указанного пользователя теги не найдены.",
                "operationId": "get_user_tags_tags_get_get",
                "parameters": [
                    {
                        "name": "x-user-id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "X-User-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagsOutput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags/delete": {
            "post": {
                "tags": [
                    "tags"
                ],
                "summary": "Delete User Tags",
                "description": "Удаляет теги для пользователя.\n\n:param user_id: Идентификатор пользователя, для которого удаляются теги.\n:param tags_input: Список тегов, переданных пользователем в формате TagsInput.\n:param session: Подключение к базе данных, передаётся через Depends.\n:return: Словарь с сообщением о статусе операции.\n:raises HTTPException: Если список тегов пустой, не найден пользователь или произошла ошибка базы данных.",
                "operationId": "delete_user_tags_tags_delete_post",
                "parameters": [
                    {
                        "name": "x-user-id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "X-User-Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagsInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Delete User Tags Tags Delete Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "Read Root",
                "operationId": "read_root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Read Root  Get"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Body_icon_upload_files_icon_upload_post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_icon_upload_files_icon_upload_post"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "RegisterRequest": {
                "properties": {
                    "login": {
                        "type": "string",
                        "title": "Login"
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name"
                    }
                },
                "type": "object",
                "required": [
                    "login",
                    "first_name",
                    "last_name"
                ],
                "title": "RegisterRequest"
            },
            "TagsInput": {
                "properties": {
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tags"
                    }
                },
                "type": "object",
                "required": [
                    "tags"
                ],
                "title": "TagsInput",
                "description": "Схема для добавления тегов пользователя."
            },
            "TagsOutput": {
                "properties": {
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tags"
                    }
                },
                "type": "object",
                "required": [
                    "tags"
                ],
                "title": "TagsOutput",
                "description": "Схема для получения тегов пользователя."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}
